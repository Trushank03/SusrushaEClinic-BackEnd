# Generated by Django 5.2.4 on 2025-08-12 12:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('eclinic', '0007_clinic_consultation_duration'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalMedication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('generic_name', models.CharField(blank=True, max_length=200)),
                ('brand_name', models.CharField(blank=True, max_length=200)),
                ('composition', models.TextField(blank=True, help_text='Active ingredients and composition')),
                ('dosage_form', models.CharField(choices=[('tablet', 'Tablet'), ('capsule', 'Capsule'), ('syrup', 'Syrup'), ('injection', 'Injection'), ('cream', 'Cream'), ('ointment', 'Ointment'), ('drops', 'Drops'), ('inhaler', 'Inhaler'), ('suppository', 'Suppository'), ('other', 'Other')], default='tablet', max_length=20)),
                ('strength', models.CharField(blank=True, help_text='e.g., 500mg, 10mg/ml', max_length=100)),
                ('medication_type', models.CharField(choices=[('generic', 'Generic'), ('branded', 'Branded'), ('combination', 'Combination')], default='generic', max_length=20)),
                ('therapeutic_class', models.CharField(blank=True, max_length=200)),
                ('indication', models.TextField(blank=True, help_text='What this medication is used for')),
                ('contraindications', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('dosage_instructions', models.TextField(blank=True, help_text='General dosage instructions')),
                ('frequency_options', models.JSONField(default=list, help_text='Available frequency options')),
                ('timing_options', models.JSONField(default=list, help_text='Available timing options')),
                ('manufacturer', models.CharField(blank=True, max_length=200)),
                ('license_number', models.CharField(blank=True, max_length=100)),
                ('is_prescription_required', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_medications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Global Medication',
                'verbose_name_plural': 'Global Medications',
                'db_table': 'global_medications',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='clinicinventory',
            name='global_medication',
            field=models.ForeignKey(blank=True, help_text='Link to global medication catalog', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clinic_inventories', to='eclinic.globalmedication'),
        ),
        migrations.AlterUniqueTogether(
            name='clinicinventory',
            unique_together={('clinic', 'global_medication', 'batch_number')},
        ),
        migrations.AddIndex(
            model_name='globalmedication',
            index=models.Index(fields=['name'], name='global_medi_name_64df34_idx'),
        ),
        migrations.AddIndex(
            model_name='globalmedication',
            index=models.Index(fields=['generic_name'], name='global_medi_generic_9d08b2_idx'),
        ),
        migrations.AddIndex(
            model_name='globalmedication',
            index=models.Index(fields=['brand_name'], name='global_medi_brand_n_da0705_idx'),
        ),
        migrations.AddIndex(
            model_name='globalmedication',
            index=models.Index(fields=['is_active'], name='global_medi_is_acti_c74b30_idx'),
        ),
    ]
